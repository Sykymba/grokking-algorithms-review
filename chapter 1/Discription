Глава 1. Введение в алгоритмы
    Основные концепции:
        В первой главе подробно рассматривается суть алгоритмов и их практическое применение. Автор доступно объясняет,
        зачем нужны алгоритмы, используя понятные аналогии и жизненные примеры. Это помогает сформировать базовое понимание того,
        как алгоритмы упрощают решение сложных задач.

    Первый встречаемый алгоритм:
        Бинарный поиск становится первым алгоритмом, который рассматривается в книге.
        Этот метод поиска элементов в отсортированном массиве демонстрирует значительное преимущество перед классическим линейным поиском.

    Преимущества бинарного поиска:
        Эффективность алгоритма проявляется в существенной экономии времени:
        - Линейный поиск требует последовательной проверки каждого элемента
        - Бинарный поиск сокращает количество операций за счет деления массива пополам

    План разбора
        Структура изучения:
            Разбор кода бинарного поиска
            Демонстрация работы алгоритма на примерах
            Сравнение производительности с линейным поиском
            Анализ полученных результатов

    После изучения кода мы представим конкретные цифры, которые наглядно покажут разницу в эффективности между бинарным и линейным поиском.
    Вы увидите, насколько впечатляющими могут быть результаты оптимизации даже простого алгоритма поиска.
    С Цифрами можно ознакомиться в файле: Algorithms_test.py. постарался превсти хороший пример на кол-ве итераций и времени затраченым на выполнение функции!

    Готовы погрузиться в детали и увидеть мощь бинарного поиска на практике? Давайте начнем с анализа кода! Его вы можете найти в файле Binary_search.py

    Самое главное отличие Бинарного поиска от линейного в том , что алгоритмическая сложность бинарного поиска составляет О(log n),
    а у линейного О(n), поэтому бинарный поиск быстрее раз в 5-10.
    Самое страшное , что бинарный поиск применяется только к отсортированым спискам, но при этом в python есть много функций сортировки поэтому проблем быть не должно,
    а вот в следующей главе мы юудем затрагивать сортировку.

    Всего доброго! Спасибо!



